/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminCustomRouteImport } from './routes/admin.custom'
import { Route as AdminSplatRouteImport } from './routes/admin.$'
import { ServerRoute as ApiUsersExportServerRouteImport } from './routes/api/users.export'
import { ServerRoute as ApiPostsExportServerRouteImport } from './routes/api/posts.export'
import { ServerRoute as ApiAdminSplatServerRouteImport } from './routes/api/admin.$'

const rootServerRouteImport = createServerRootRoute()

const AdminCustomRoute = AdminCustomRouteImport.update({
  id: '/admin/custom',
  path: '/admin/custom',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSplatRoute = AdminSplatRouteImport.update({
  id: '/admin/$',
  path: '/admin/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUsersExportServerRoute = ApiUsersExportServerRouteImport.update({
  id: '/api/users/export',
  path: '/api/users/export',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiPostsExportServerRoute = ApiPostsExportServerRouteImport.update({
  id: '/api/posts/export',
  path: '/api/posts/export',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAdminSplatServerRoute = ApiAdminSplatServerRouteImport.update({
  id: '/api/admin/$',
  path: '/api/admin/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/admin/$': typeof AdminSplatRoute
  '/admin/custom': typeof AdminCustomRoute
}
export interface FileRoutesByTo {
  '/admin/$': typeof AdminSplatRoute
  '/admin/custom': typeof AdminCustomRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/admin/$': typeof AdminSplatRoute
  '/admin/custom': typeof AdminCustomRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/admin/$' | '/admin/custom'
  fileRoutesByTo: FileRoutesByTo
  to: '/admin/$' | '/admin/custom'
  id: '__root__' | '/admin/$' | '/admin/custom'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminSplatRoute: typeof AdminSplatRoute
  AdminCustomRoute: typeof AdminCustomRoute
}
export interface FileServerRoutesByFullPath {
  '/api/admin/$': typeof ApiAdminSplatServerRoute
  '/api/posts/export': typeof ApiPostsExportServerRoute
  '/api/users/export': typeof ApiUsersExportServerRoute
}
export interface FileServerRoutesByTo {
  '/api/admin/$': typeof ApiAdminSplatServerRoute
  '/api/posts/export': typeof ApiPostsExportServerRoute
  '/api/users/export': typeof ApiUsersExportServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/admin/$': typeof ApiAdminSplatServerRoute
  '/api/posts/export': typeof ApiPostsExportServerRoute
  '/api/users/export': typeof ApiUsersExportServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/admin/$' | '/api/posts/export' | '/api/users/export'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/admin/$' | '/api/posts/export' | '/api/users/export'
  id: '__root__' | '/api/admin/$' | '/api/posts/export' | '/api/users/export'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAdminSplatServerRoute: typeof ApiAdminSplatServerRoute
  ApiPostsExportServerRoute: typeof ApiPostsExportServerRoute
  ApiUsersExportServerRoute: typeof ApiUsersExportServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin/custom': {
      id: '/admin/custom'
      path: '/admin/custom'
      fullPath: '/admin/custom'
      preLoaderRoute: typeof AdminCustomRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/$': {
      id: '/admin/$'
      path: '/admin/$'
      fullPath: '/admin/$'
      preLoaderRoute: typeof AdminSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/users/export': {
      id: '/api/users/export'
      path: '/api/users/export'
      fullPath: '/api/users/export'
      preLoaderRoute: typeof ApiUsersExportServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/posts/export': {
      id: '/api/posts/export'
      path: '/api/posts/export'
      fullPath: '/api/posts/export'
      preLoaderRoute: typeof ApiPostsExportServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/$': {
      id: '/api/admin/$'
      path: '/api/admin/$'
      fullPath: '/api/admin/$'
      preLoaderRoute: typeof ApiAdminSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AdminSplatRoute: AdminSplatRoute,
  AdminCustomRoute: AdminCustomRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAdminSplatServerRoute: ApiAdminSplatServerRoute,
  ApiPostsExportServerRoute: ApiPostsExportServerRoute,
  ApiUsersExportServerRoute: ApiUsersExportServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
