// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

generator jsonSchema {
  provider              = "prisma-json-schema-generator"
  includeRequiredFields = "true"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  posts     Post[]    @relation("author") // One-to-many relation
  profile   Profile?  @relation("profile") // One-to-one relation
  birthDate DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  role      Role      @default(USER)
  avatar    String?
}

model Post {
  id         Int            @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean        @default(false)
  author     User           @relation("author", fields: [authorId], references: [id])
  authorId   Int
  categories Category[]     @relation("category") // implicit Many-to-many relation
  comments   post_comment[] @relation("comments") // One-to-many relation
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String?
  user      User?    @relation("profile", fields: [userId], references: [id])
  userId    Int?     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  posts     Post[]   @relation("category") // implicit Many-to-many relation
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model post_comment {
  id        String   @id @default(uuid())
  content   String
  post      Post     @relation("comments", fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
